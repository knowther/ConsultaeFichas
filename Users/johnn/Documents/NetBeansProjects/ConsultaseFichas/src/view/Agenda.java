/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author johnn
 */
public class Agenda extends javax.swing.JFrame {
    int AnoFixo = 0, MesFixo = 0, DiaFixo = 0;
    int AnoAltera = 0, MesAltera = 0, DiaAltera = 0;
    int valorselecao = 0;
    int diaCliq = 0;
    /**
     * Creates new form Agenda
     */
    public Agenda() {
        initComponents();
        IniciarCalendario();
        Calendario();
        calendario_evt();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        SelecaoMes = new javax.swing.JComboBox<>();
        jSpinner1 = new javax.swing.JSpinner();
        SelecaoAno = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        t1 = new javax.swing.JLabel();
        t2 = new javax.swing.JLabel();
        t8 = new javax.swing.JLabel();
        t15 = new javax.swing.JLabel();
        t22 = new javax.swing.JLabel();
        t3 = new javax.swing.JLabel();
        t9 = new javax.swing.JLabel();
        t4 = new javax.swing.JLabel();
        t5 = new javax.swing.JLabel();
        t6 = new javax.swing.JLabel();
        t7 = new javax.swing.JLabel();
        t16 = new javax.swing.JLabel();
        t23 = new javax.swing.JLabel();
        t10 = new javax.swing.JLabel();
        t17 = new javax.swing.JLabel();
        t24 = new javax.swing.JLabel();
        t11 = new javax.swing.JLabel();
        t18 = new javax.swing.JLabel();
        t25 = new javax.swing.JLabel();
        t12 = new javax.swing.JLabel();
        t19 = new javax.swing.JLabel();
        t26 = new javax.swing.JLabel();
        t13 = new javax.swing.JLabel();
        t20 = new javax.swing.JLabel();
        t27 = new javax.swing.JLabel();
        t14 = new javax.swing.JLabel();
        t21 = new javax.swing.JLabel();
        t28 = new javax.swing.JLabel();
        t29 = new javax.swing.JLabel();
        t36 = new javax.swing.JLabel();
        t30 = new javax.swing.JLabel();
        t37 = new javax.swing.JLabel();
        t31 = new javax.swing.JLabel();
        t38 = new javax.swing.JLabel();
        t32 = new javax.swing.JLabel();
        t39 = new javax.swing.JLabel();
        t33 = new javax.swing.JLabel();
        t40 = new javax.swing.JLabel();
        t34 = new javax.swing.JLabel();
        t41 = new javax.swing.JLabel();
        t35 = new javax.swing.JLabel();
        t42 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        DiaPag1 = new javax.swing.JLabel();
        SemDiaPag1 = new javax.swing.JLabel();
        MesPag1 = new javax.swing.JLabel();
        MesPag2 = new javax.swing.JLabel();
        DiaPag2 = new javax.swing.JLabel();
        SemDiaPag2 = new javax.swing.JLabel();
        AnoPag1 = new javax.swing.JLabel();
        AnoPag2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(null);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLayeredPane1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setBackground(new java.awt.Color(0, 153, 204));
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Dom");
        jLabel2.setOpaque(true);

        SelecaoMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro ", "Novembro", "Dezembro" }));

        SelecaoAno.setEditable(true);
        SelecaoAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelecaoAnoActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 153, 204));
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Seg");
        jLabel3.setOpaque(true);

        jLabel4.setBackground(new java.awt.Color(0, 153, 204));
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Ter");
        jLabel4.setOpaque(true);

        jLabel5.setBackground(new java.awt.Color(0, 153, 204));
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Qua");
        jLabel5.setOpaque(true);

        jLabel6.setBackground(new java.awt.Color(0, 153, 204));
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Qui");
        jLabel6.setOpaque(true);

        jLabel7.setBackground(new java.awt.Color(0, 153, 204));
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Sex");
        jLabel7.setOpaque(true);

        jLabel8.setBackground(new java.awt.Color(0, 153, 204));
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Sáb");
        jLabel8.setOpaque(true);

        t1.setForeground(new java.awt.Color(255, 0, 51));
        t1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t1.setText("0");

        t2.setForeground(new java.awt.Color(0, 0, 0));
        t2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t2.setText("0");

        t8.setForeground(new java.awt.Color(255, 0, 51));
        t8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t8.setText("0");

        t15.setForeground(new java.awt.Color(255, 0, 51));
        t15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t15.setText("0");

        t22.setForeground(new java.awt.Color(255, 0, 51));
        t22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t22.setText("0");

        t3.setForeground(new java.awt.Color(0, 0, 0));
        t3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t3.setText("0");

        t9.setForeground(new java.awt.Color(0, 0, 0));
        t9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t9.setText("0");

        t4.setForeground(new java.awt.Color(0, 0, 0));
        t4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t4.setText("0");

        t5.setForeground(new java.awt.Color(0, 0, 0));
        t5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t5.setText("0");

        t6.setForeground(new java.awt.Color(0, 0, 0));
        t6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t6.setText("0");

        t7.setForeground(new java.awt.Color(0, 0, 0));
        t7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t7.setText("0");

        t16.setForeground(new java.awt.Color(0, 0, 0));
        t16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t16.setText("0");

        t23.setForeground(new java.awt.Color(0, 0, 0));
        t23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t23.setText("0");

        t10.setForeground(new java.awt.Color(0, 0, 0));
        t10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t10.setText("0");

        t17.setForeground(new java.awt.Color(0, 0, 0));
        t17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t17.setText("0");

        t24.setForeground(new java.awt.Color(0, 0, 0));
        t24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t24.setText("0");

        t11.setForeground(new java.awt.Color(0, 0, 0));
        t11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t11.setText("0");

        t18.setForeground(new java.awt.Color(0, 0, 0));
        t18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t18.setText("0");

        t25.setForeground(new java.awt.Color(0, 0, 0));
        t25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t25.setText("0");

        t12.setForeground(new java.awt.Color(0, 0, 0));
        t12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t12.setText("0");

        t19.setForeground(new java.awt.Color(0, 0, 0));
        t19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t19.setText("0");

        t26.setForeground(new java.awt.Color(0, 0, 0));
        t26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t26.setText("0");

        t13.setForeground(new java.awt.Color(0, 0, 0));
        t13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t13.setText("0");

        t20.setForeground(new java.awt.Color(0, 0, 0));
        t20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t20.setText("0");

        t27.setForeground(new java.awt.Color(0, 0, 0));
        t27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t27.setText("0");

        t14.setForeground(new java.awt.Color(0, 0, 0));
        t14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t14.setText("0");

        t21.setForeground(new java.awt.Color(0, 0, 0));
        t21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t21.setText("0");

        t28.setForeground(new java.awt.Color(0, 0, 0));
        t28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t28.setText("0");

        t29.setForeground(new java.awt.Color(255, 0, 51));
        t29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t29.setText("0");

        t36.setForeground(new java.awt.Color(255, 0, 51));
        t36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t36.setText("0");

        t30.setForeground(new java.awt.Color(0, 0, 0));
        t30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t30.setText("0");

        t37.setForeground(new java.awt.Color(0, 0, 0));
        t37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t37.setText("0");

        t31.setForeground(new java.awt.Color(0, 0, 0));
        t31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t31.setText("0");

        t38.setForeground(new java.awt.Color(0, 0, 0));
        t38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t38.setText("0");

        t32.setForeground(new java.awt.Color(0, 0, 0));
        t32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t32.setText("0");

        t39.setForeground(new java.awt.Color(0, 0, 0));
        t39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t39.setText("0");

        t33.setForeground(new java.awt.Color(0, 0, 0));
        t33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t33.setText("0");

        t40.setForeground(new java.awt.Color(0, 0, 0));
        t40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t40.setText("0");

        t34.setForeground(new java.awt.Color(0, 0, 0));
        t34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t34.setText("0");

        t41.setForeground(new java.awt.Color(0, 0, 0));
        t41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t41.setText("0");

        t35.setForeground(new java.awt.Color(0, 0, 0));
        t35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t35.setText("0");

        t42.setForeground(new java.awt.Color(0, 0, 0));
        t42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t42.setText("0");

        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(SelecaoMes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jSpinner1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(SelecaoAno, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t22, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t23, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t24, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t25, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t26, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t20, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t27, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t21, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t28, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t29, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t36, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t30, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t37, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t31, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t38, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t32, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t39, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t33, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t40, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t34, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t41, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t35, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(t42, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(SelecaoMes, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SelecaoAno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(t22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(t9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t35, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelecaoMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelecaoAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2))
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t1)
                    .addComponent(t2)
                    .addComponent(t3)
                    .addComponent(t4)
                    .addComponent(t5)
                    .addComponent(t6)
                    .addComponent(t7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t8)
                    .addComponent(t9)
                    .addComponent(t10)
                    .addComponent(t11)
                    .addComponent(t12)
                    .addComponent(t13)
                    .addComponent(t14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t15)
                    .addComponent(t16)
                    .addComponent(t17)
                    .addComponent(t18)
                    .addComponent(t19)
                    .addComponent(t20)
                    .addComponent(t21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t22)
                    .addComponent(t23)
                    .addComponent(t24)
                    .addComponent(t25)
                    .addComponent(t26)
                    .addComponent(t27)
                    .addComponent(t28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t29)
                    .addComponent(t30)
                    .addComponent(t31)
                    .addComponent(t32)
                    .addComponent(t33)
                    .addComponent(t34)
                    .addComponent(t35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t36)
                    .addComponent(t37)
                    .addComponent(t38)
                    .addComponent(t39)
                    .addComponent(t40)
                    .addComponent(t41)
                    .addComponent(t42))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jLayeredPane1);
        jLayeredPane1.setBounds(70, 50, 240, 190);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        jButton1.setInheritsPopupMenu(true);
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(1330, 10, 30, 32);

        DiaPag1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 48)); // NOI18N
        DiaPag1.setForeground(new java.awt.Color(0, 0, 0));
        DiaPag1.setText("7");
        getContentPane().add(DiaPag1);
        DiaPag1.setBounds(570, 100, 60, 80);

        SemDiaPag1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 18)); // NOI18N
        SemDiaPag1.setForeground(new java.awt.Color(0, 0, 0));
        SemDiaPag1.setText("Quinta");
        getContentPane().add(SemDiaPag1);
        SemDiaPag1.setBounds(360, 150, 80, 25);

        MesPag1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 24)); // NOI18N
        MesPag1.setForeground(new java.awt.Color(0, 0, 0));
        MesPag1.setText("Janeiro");
        getContentPane().add(MesPag1);
        MesPag1.setBounds(360, 80, 120, 30);

        MesPag2.setFont(new java.awt.Font("Lucida Calligraphy", 1, 24)); // NOI18N
        MesPag2.setForeground(new java.awt.Color(0, 0, 0));
        MesPag2.setText("Janeiro");
        getContentPane().add(MesPag2);
        MesPag2.setBounds(750, 120, 120, 50);

        DiaPag2.setFont(new java.awt.Font("Lucida Calligraphy", 1, 48)); // NOI18N
        DiaPag2.setForeground(new java.awt.Color(0, 0, 0));
        DiaPag2.setText("7");
        getContentPane().add(DiaPag2);
        DiaPag2.setBounds(1250, 100, 60, 80);

        SemDiaPag2.setFont(new java.awt.Font("Lucida Calligraphy", 1, 18)); // NOI18N
        SemDiaPag2.setForeground(new java.awt.Color(0, 0, 0));
        SemDiaPag2.setText("Quinta");
        getContentPane().add(SemDiaPag2);
        SemDiaPag2.setBounds(950, 110, 80, 25);

        AnoPag1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        AnoPag1.setForeground(new java.awt.Color(0, 0, 0));
        AnoPag1.setText("2021");
        getContentPane().add(AnoPag1);
        AnoPag1.setBounds(760, 70, 35, 20);

        AnoPag2.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        AnoPag2.setForeground(new java.awt.Color(0, 0, 0));
        AnoPag2.setText("2021");
        getContentPane().add(AnoPag2);
        AnoPag2.setBounds(470, 80, 50, 30);

        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/FundoAgenda.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-10, 0, 1390, 730);

        setSize(new java.awt.Dimension(1366, 719));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SelecaoAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelecaoAnoActionPerformed
    try{
            int x = Integer.parseInt(SelecaoAno.getSelectedItem().toString());
            DiaAltera = DiaFixo;
            Calendario();
            AnoPag1.setText(SelecaoAno.getSelectedItem().toString());
            AnoPag2.setText(SelecaoAno.getSelectedItem().toString());
        }catch (Exception e){
            SelecaoAno.setSelectedItem(AnoFixo);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_SelecaoAnoActionPerformed
    
    public void IniciarCalendario(){
        SimpleDateFormat Ano = new SimpleDateFormat("yyyy");
        SimpleDateFormat Mes = new SimpleDateFormat("MM");  
        SimpleDateFormat Dia = new SimpleDateFormat("dd");
        
        AnoFixo = Integer.parseInt(Ano.format(new Date()));
        MesFixo = Integer.parseInt(Mes.format(new Date()));
        DiaFixo = Integer.parseInt(Dia.format(new Date()));
        
        //JOptionPane.showMessageDialog(null, DiaFixo + "/" + MesFixo + "/" + AnoFixo);
        
        int AnoMaximo = AnoFixo + 50;
        for (int i = 2000; i < AnoMaximo; i++){
           String AnoString = Integer.toString(i);
            SelecaoAno.addItem(AnoString);
        }
        
        SelecaoAno.setSelectedItem(AnoFixo);
        
        
        
        if (MesFixo ==1){
            SelecaoMes.setSelectedIndex(0);
        }else if (MesFixo == 2){
            SelecaoMes.setSelectedIndex(1);
        }else if (MesFixo == 3){
            SelecaoMes.setSelectedIndex(2);
        }else if (MesFixo == 4){
            SelecaoMes.setSelectedIndex(3);
        }else if (MesFixo == 5){
            SelecaoMes.setSelectedIndex(4);
        }else if (MesFixo == 6){
            SelecaoMes.setSelectedIndex(5);
        }else if (MesFixo == 7){
            SelecaoMes.setSelectedIndex(6);
        }else if (MesFixo == 8){
            SelecaoMes.setSelectedIndex(7);
        }
        else if (MesFixo == 9){
            SelecaoMes.setSelectedIndex(8);
        }else if (MesFixo == 10){
            SelecaoMes.setSelectedIndex(9);
        }else if (MesFixo == 11){
            SelecaoMes.setSelectedIndex(10);
        }else if (MesFixo == 12){
            SelecaoMes.setSelectedIndex(11);
        }
        }
    public void Calendario (){
        t1.setText("");
        t2.setText("");
        t3.setText("");
        t4.setText("");
        t5.setText("");
        t6.setText("");
        t7.setText("");
        t8.setText("");
        t9.setText("");
        t10.setText("");
        t11.setText("");
        t12.setText("");
        t13.setText("");
        t14.setText("");
        t15.setText("");
        t16.setText("");
        t17.setText("");
        t18.setText("");
        t19.setText("");
        t20.setText("");
        t21.setText("");
        t22.setText("");
        t23.setText("");
        t24.setText("");
        t25.setText("");
        t26.setText("");
        t27.setText("");
        t28.setText("");
        t29.setText("");
        t30.setText("");
        t31.setText("");
        t32.setText("");
        t33.setText("");
        t34.setText("");
        t35.setText("");
        t36.setText("");
        t37.setText("");
        t38.setText("");
        t39.setText("");
        t40.setText("");
        t41.setText("");
        t42.setText("");
        
        
        DiaAltera = DiaFixo;
        MesAltera = SelecaoMes.getSelectedIndex();
        AnoAltera = Integer.parseInt(SelecaoAno.getSelectedItem().toString());
        
        int TotalDiasMes = 0;
        
        if(MesAltera == 0){
            TotalDiasMes = 31;
        }else if (MesAltera == 1){
            int resultado = (AnoAltera % 4);
            if (resultado == 0){
                TotalDiasMes = 29;
            }else{
                TotalDiasMes = 28;
            }  
    }
        else if (MesAltera == 2){
            TotalDiasMes = 31;
        }
        else if (MesAltera == 3){
            TotalDiasMes = 30;
        }
        else if (MesAltera == 4){
            TotalDiasMes = 31;
        }
        else if (MesAltera == 5){
            TotalDiasMes = 30;
        }
        else if (MesAltera == 6){
            TotalDiasMes = 31;
        }
        else if (MesAltera == 7){
            TotalDiasMes = 31;
        }
        else if (MesAltera == 8){
            TotalDiasMes = 30;
        }
        else if (MesAltera == 9){
            TotalDiasMes = 31;
        }
        else if (MesAltera == 10){
            TotalDiasMes = 30;
        }
        else if (MesAltera == 11){
            TotalDiasMes = 31;
        }
        Calendar calendar = Calendar.getInstance();
        calendar.set(AnoAltera, MesAltera, 1);
        int SetaDia = 0;
        
        int Semana = calendar.get(Calendar.DAY_OF_WEEK);
        if(Semana == Calendar.SUNDAY){
            SetaDia = 1;
            System.out.println("Dom");
        } else if (Semana == Calendar.MONDAY){
            SetaDia = 2;
            System.out.println("Seg");
        } else if (Semana == Calendar.TUESDAY){
            SetaDia = 3;
            System.out.println("Ter");
        } else if (Semana == Calendar.WEDNESDAY){
            SetaDia = 4;
            System.out.println("Qua");
        } else if (Semana == Calendar.THURSDAY){
            SetaDia = 5;
            System.out.println("Qui");
        } else if (Semana == Calendar.FRIDAY){
            SetaDia = 6;
            System.out.println("Sex");
        } else if (Semana == Calendar.SATURDAY){
            SetaDia = 7;
            System.out.println("Sáb");
        }
        
            for (int i = 1; i <= TotalDiasMes; i++){
                switch (SetaDia){
                    case 1:
                        t1.setText("" + i);
                        break;
                    case 2:
                        t2.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t2.setForeground(Color.red);
                        }else{
                            t2.setForeground(Color.black);
                           
                        }
                        break;
                    case 3:
                        t3.setText("" + i);
                         if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t3.setForeground(Color.red);
                        }else{
                            t3.setForeground(Color.black);
                        }
                        break;
                    case 4:
                        t4.setText("" + i);
                         if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t4.setForeground(Color.red);
                        }else{
                            t4.setForeground(Color.black);
                        }
                        break;
                    case 5:
                        t5.setText("" + i);
                         if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t5.setForeground(Color.red);
                        }else{
                            t5.setForeground(Color.black);
                        }
                        break;
                    case 6:
                        t6.setText("" + i);
                         if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t6.setForeground(Color.red);
                        }else{
                            t6.setForeground(Color.black);
                        }
                        break;
                    case 7:
                        t7.setText("" + i);
                         if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t7.setForeground(Color.red);
                        }else{
                            t7.setForeground(Color.black);
                        }
                        break;
                    case 8:
                        t8.setText("" + i);
                         if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t8.setForeground(Color.red);
                        }else{
                            t8.setForeground(Color.black);
                        }
                        break;
                    case 9:
                        t9.setText("" + i);
                         if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t9.setForeground(Color.red);
                        }else{
                            t9.setForeground(Color.black);
                        }
                        break;
                    case 10:
                        t10.setText("" + i);
                         if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t10.setForeground(Color.red);
                        }else{
                            t10.setForeground(Color.black);
                        }
                        break;
                    case 11:
                        t11.setText("" + i);
                         if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t11.setForeground(Color.red);
                        }else{
                            t11.setForeground(Color.black);
                        }
                        break;   
                    case 12:
                        t12.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t12.setForeground(Color.red);
                        }else{
                            t12.setForeground(Color.black);
                        }
                        break;
                    case 13:
                        t13.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t13.setForeground(Color.red);
                        }else{
                            t13.setForeground(Color.black);
                        }
                        break; 
                    case 14:
                        t14.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t14.setForeground(Color.red);
                        }else{
                            t14.setForeground(Color.black);
                        }
                        break;
                    case 15:
                        t15.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t15.setForeground(Color.red);
                        }else{
                            t15.setForeground(Color.black);
                        }
                        break;
                    case 16:
                        t16.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t16.setForeground(Color.red);
                        }else{
                            t16.setForeground(Color.black);
                        }
                        break;    
                    case 17:
                        t17.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t17.setForeground(Color.red);
                        }else{
                            t17.setForeground(Color.black);
                        }
                        break;
                    case 18:
                        t18.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t18.setForeground(Color.red);
                        }else{
                            t18.setForeground(Color.black);
                        }
                    case 19:
                        t19.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t19.setForeground(Color.red);
                        }else{
                            t19.setForeground(Color.black);
                        }
                        break;
                    case 20:
                        t20.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t20.setForeground(Color.red);
                        }else{
                            t20.setForeground(Color.black);
                        }
                        break;
                    case 21:
                        t21.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t21.setForeground(Color.red);
                        }else{
                            t21.setForeground(Color.black);
                        }
                        break;
                    case 22:
                        t22.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t22.setForeground(Color.red);
                        }else{
                            t22.setForeground(Color.black);
                        }
                        break;
                    case 23:
                        t23.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t23.setForeground(Color.red);
                        }else{
                            t23.setForeground(Color.black);
                        }
                        break;   
                    case 24:
                        t24.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t24.setForeground(Color.red);
                        }else{
                            t24.setForeground(Color.black);
                        }
                        break; 
                    case 25:
                        t25.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t25.setForeground(Color.red);
                        }else{
                            t25.setForeground(Color.black);
                        }
                        break; 
                    case 26:
                        t26.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t26.setForeground(Color.red);
                        }else{
                            t26.setForeground(Color.black);
                        }
                        break;  
                    case 27:
                        t27.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t27.setForeground(Color.red);
                        }else{
                            t27.setForeground(Color.black);
                        }
                        break; 
                    case 28:
                        t28.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t28.setForeground(Color.red);
                        }else{
                            t28.setForeground(Color.black);
                        }
                        break;    
                    case 29:
                        t29.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t29.setForeground(Color.red);
                        }else{
                            t29.setForeground(Color.black);
                        }
                        break; 
                    case 30:
                        t30.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t30.setForeground(Color.red);
                        }else{
                            t30.setForeground(Color.black);
                        }
                        break;
                    case 31:
                        t31.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t31.setForeground(Color.red);
                        }else{
                            t31.setForeground(Color.black);
                        }
                        break;
                    case 32:
                        t32.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t32.setForeground(Color.red);
                        }else{
                            t32.setForeground(Color.black);
                        }
                        break;  
                    case 33:
                        t33.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t33.setForeground(Color.red);
                        }else{
                            t33.setForeground(Color.black);
                        }
                        break;  
                    case 34:
                        t34.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t34.setForeground(Color.red);
                        }else{
                            t34.setForeground(Color.black);
                        }
                        break;
                    case 35:
                        t35.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t35.setForeground(Color.red);
                        }else{
                            t35.setForeground(Color.black);
                        }
                        break;
                    case 36:
                        t36.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t36.setForeground(Color.red);
                        }else{
                            t36.setForeground(Color.black);
                        }
                        break;
                    case 37:
                        t37.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t37.setForeground(Color.red);
                        }else{
                            t37.setForeground(Color.black);
                        }
                        break;
                    case 38:
                        t38.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t38.setForeground(Color.red);
                        }else{
                            t38.setForeground(Color.black);
                        }
                        break;
                    case 39:
                        t39.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t39.setForeground(Color.red);
                        }else{
                            t39.setForeground(Color.black);
                        }
                        break;
                    case 40:
                        t40.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t40.setForeground(Color.red);
                        }else{
                            t40.setForeground(Color.black);
                        }
                        break;
                    case 41:
                        t41.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t41.setForeground(Color.red);
                        }else{
                            t41.setForeground(Color.black);
                        }
                        break; 
                    case 42:
                        t42.setText("" + i);
                        if(i == DiaFixo & MesAltera == MesFixo - 1 & AnoAltera == AnoFixo){
                            t42.setForeground(Color.red);
                        }else{
                            t42.setForeground(Color.black);
                        }
                        break;     
                }
                SetaDia ++;
            }
            if(!"".equals(t1.getText())){
                t1.setOpaque(true);
            }else{
                t1.setOpaque(false);
            }
            if(!"".equals(t2.getText())){
                t2.setOpaque(true);
            }else{
                t2.setOpaque(false);
            }
            if(!"".equals(t3.getText())){
                t3.setOpaque(true);
            }else{
                t3.setOpaque(false);
            }if(!"".equals(t4.getText())){
                t4.setOpaque(true);
            }else{
                t4.setOpaque(false);
            }if(!"".equals(t5.getText())){
                t5.setOpaque(true);
            }else{
                t5.setOpaque(false);
            }if(!"".equals(t6.getText())){
                t6.setOpaque(true);
            }else{
                t6.setOpaque(false);
            }if(!"".equals(t7.getText())){
                t7.setOpaque(true);
            }else{
                t7.setOpaque(false);
                
            }if(!"".equals(t29.getText())){
                t29.setOpaque(true);
            }else{
                t29.setOpaque(false);    
            }if(!"".equals(t30.getText())){
                t30.setOpaque(true);
            }else{
                t30.setOpaque(false);
            }
            if(!"".equals(t31.getText())){
                t31.setOpaque(true);
            }else{
                t31.setOpaque(false);
            }
            if(!"".equals(t33.getText())){
                t33.setOpaque(true);
            }else{
                t33.setOpaque(false);
            }
            if(!"".equals(t32.getText())){
                t32.setOpaque(true);
            }else{
                t32.setOpaque(false);
            }
            if(!"".equals(t34.getText())){
                t34.setOpaque(true);
            }else{
                t34.setOpaque(false);
            }
            if(!"".equals(t35.getText())){
                t35.setOpaque(true);
            }else{
                t35.setOpaque(false);
            }
            if(!"".equals(t36.getText())){
                t36.setOpaque(true);
            }else{
                t36.setOpaque(false);
            }if(!"".equals(t37.getText())){
                t37.setOpaque(true);
            }else{
                t37.setOpaque(false);
            }if(!"".equals(t38.getText())){
                t38.setOpaque(true);
            }else{
                t38.setOpaque(false);
            }if(!"".equals(t39.getText())){
                t39.setOpaque(true);
            }else{
                t39.setOpaque(false);
            }if(!"".equals(t40.getText())){
                t40.setOpaque(true);
            }else{
                t40.setOpaque(false);
            }if(!"".equals(t41.getText())){
                t41.setOpaque(true);
            }else{
                t41.setOpaque(false);
            }if(!"".equals(t42.getText())){
                t42.setOpaque(true);
            }else{
                t42.setOpaque(false);
            }
            
           VerificaSemana();
           
    }
    
    public void VerificaSemana(){
     try{  
         if(MesAltera != MesFixo -1 & diaCliq != 0){
             DiaAltera = 1;
         }
         if(AnoAltera != AnoFixo & diaCliq != 0){
             DiaAltera = 1;
         }
         diaCliq = 1;
         
         if(DiaAltera == DiaFixo & MesAltera + 1 == MesFixo & AnoAltera == AnoFixo){
             DiaPag1.setForeground(Color.red);
             DiaPag2.setForeground(Color.RED);
         }else{
             DiaPag1.setForeground(Color.black);
             DiaPag2.setForeground(Color.black);
         }
         
        MesAltera = SelecaoMes.getSelectedIndex();
        AnoAltera = Integer.parseInt(SelecaoAno.getSelectedItem().toString());
        Calendar calendarN = Calendar.getInstance();
        calendarN.set(AnoAltera, MesAltera, DiaAltera);
        
        MesPag1.setText(SelecaoMes.getSelectedItem().toString());
        MesPag2.setText(SelecaoMes.getSelectedItem().toString());
        
        DiaPag1.setText("" + DiaAltera);
        DiaPag2.setText("" + DiaAltera);
        
        int semanaN = calendarN.get(Calendar.DAY_OF_WEEK);
        if(semanaN == Calendar.SUNDAY){
            SemDiaPag1.setText("Domingo");
            SemDiaPag2.setText("Domingo");
            }else if(semanaN == Calendar.MONDAY){
            SemDiaPag1.setText("Segunda");
            SemDiaPag2.setText("Segunda"); 
            
            }else if(semanaN == Calendar.TUESDAY){
            SemDiaPag1.setText("Terça");
            SemDiaPag2.setText("Terça");
            }else if(semanaN == Calendar.WEDNESDAY){
            SemDiaPag1.setText("Quarta");
            SemDiaPag2.setText("Quarta");
            }else if(semanaN == Calendar.THURSDAY){
            SemDiaPag1.setText("Quinta");
            SemDiaPag2.setText("Quinta");
            }else if(semanaN == Calendar.FRIDAY){
            SemDiaPag1.setText("Sexta");
            SemDiaPag2.setText("Sexta");
            }   else if(semanaN == Calendar.SATURDAY){
            SemDiaPag1.setText("Sábado");
            SemDiaPag2.setText("Sábado");
            }            
    }       catch (Exception e){
            System.out.println(e);
    }        
} 
    public void calendario_evt(){
        t1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t1.getText())){
                    t1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t1.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t1.getText())){
                    DiaPag1.setText(t1.getText());
                    DiaPag2.setText(t1.getText());
                    
                    DiaAltera = Integer.parseInt(t1.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t2.getText())){
                    t2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t2.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t2.getText())){
                    DiaPag1.setText(t2.getText());
                    DiaPag2.setText(t2.getText());
                    
                    DiaAltera = Integer.parseInt(t2.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t3.getText())){
                    t3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t3.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t3.getText())){
                    DiaPag1.setText(t3.getText());
                    DiaPag2.setText(t3.getText());
                    
                    DiaAltera = Integer.parseInt(t3.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t4.getText())){
                    t4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t4.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
               if(!"".equals(t4.getText())){
                    DiaPag1.setText(t4.getText());
                    DiaPag2.setText(t4.getText());
                    
                    DiaAltera = Integer.parseInt(t4.getText());
                    diaCliq = 0;
                    VerificaSemana();
                } 
            }
});
        t5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t5.getText())){
                    t5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t5.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t5.getText())){
                    DiaPag1.setText(t5.getText());
                    DiaPag2.setText(t5.getText());
                    
                    DiaAltera = Integer.parseInt(t5.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t6.getText())){
                    t6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t6.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t6.getText())){
                    DiaPag1.setText(t6.getText());
                    DiaPag2.setText(t6.getText());
                    
                    DiaAltera = Integer.parseInt(t6.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t7.getText())){
                    t7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t7.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t7.getText())){
                    DiaPag1.setText(t7.getText());
                    DiaPag2.setText(t7.getText());
                    
                    DiaAltera = Integer.parseInt(t7.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t8.getText())){
                    t8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t8.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t8.getText())){
                    DiaPag1.setText(t8.getText());
                    DiaPag2.setText(t8.getText());
                    
                    DiaAltera = Integer.parseInt(t8.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t9.getText())){
                    t9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t9.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t9.getText())){
                    DiaPag1.setText(t9.getText());
                    DiaPag2.setText(t9.getText());
                    
                    DiaAltera = Integer.parseInt(t9.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t10.getText())){
                    t10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t10.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t10.getText())){
                    DiaPag1.setText(t10.getText());
                    DiaPag2.setText(t10.getText());
                    
                    DiaAltera = Integer.parseInt(t10.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t11.getText())){
                    t11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t11.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t11.getText())){
                    DiaPag1.setText(t11.getText());
                    DiaPag2.setText(t11.getText());
                    
                    DiaAltera = Integer.parseInt(t11.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t12.getText())){
                    t12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t12.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t12.getText())){
                    DiaPag1.setText(t12.getText());
                    DiaPag2.setText(t12.getText());
                    
                    DiaAltera = Integer.parseInt(t12.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t13.getText())){
                    t13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t13.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
               if(!"".equals(t13.getText())){
                    DiaPag1.setText(t13.getText());
                    DiaPag2.setText(t13.getText());
                    
                    DiaAltera = Integer.parseInt(t13.getText());
                    diaCliq = 0;
                    VerificaSemana();
                } 
            }
});
        t14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t14.getText())){
                    t14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t14.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t14.getText())){
                    DiaPag1.setText(t14.getText());
                    DiaPag2.setText(t14.getText());
                    
                    DiaAltera = Integer.parseInt(t14.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t15.getText())){
                    t15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t15.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t15.getText())){
                    DiaPag1.setText(t15.getText());
                    DiaPag2.setText(t15.getText());
                    
                    DiaAltera = Integer.parseInt(t15.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t16.getText())){
                    t16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t16.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t16.getText())){
                    DiaPag1.setText(t16.getText());
                    DiaPag2.setText(t16.getText());
                    
                    DiaAltera = Integer.parseInt(t16.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t17.getText())){
                    t17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t17.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t17.getText())){
                    DiaPag1.setText(t17.getText());
                    DiaPag2.setText(t17.getText());
                    
                    DiaAltera = Integer.parseInt(t17.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t18.getText())){
                    t18.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t18.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t18.getText())){
                    DiaPag1.setText(t18.getText());
                    DiaPag2.setText(t18.getText());
                    
                    DiaAltera = Integer.parseInt(t18.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t19.getText())){
                    t19.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t19.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t19.getText())){
                    DiaPag1.setText(t19.getText());
                    DiaPag2.setText(t19.getText());
                    
                    DiaAltera = Integer.parseInt(t19.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t20.getText())){
                    t20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t20.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t20.getText())){
                    DiaPag1.setText(t20.getText());
                    DiaPag2.setText(t20.getText());
                    
                    DiaAltera = Integer.parseInt(t20.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t21.getText())){
                    t21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t21.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t21.getText())){
                    DiaPag1.setText(t21.getText());
                    DiaPag2.setText(t21.getText());
                    
                    DiaAltera = Integer.parseInt(t21.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t22.getText())){
                    t22.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t22.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t22.getText())){
                    DiaPag1.setText(t22.getText());
                    DiaPag2.setText(t22.getText());
                    
                    DiaAltera = Integer.parseInt(t22.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t23.getText())){
                    t23.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t23.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t23.getText())){
                    DiaPag1.setText(t23.getText());
                    DiaPag2.setText(t23.getText());
                    
                    DiaAltera = Integer.parseInt(t23.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t24.getText())){
                    t24.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t24.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t24.getText())){
                    DiaPag1.setText(t24.getText());
                    DiaPag2.setText(t24.getText());
                    
                    DiaAltera = Integer.parseInt(t24.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t25.getText())){
                    t25.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t25.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t25.getText())){
                    DiaPag1.setText(t25.getText());
                    DiaPag2.setText(t25.getText());
                    
                    DiaAltera = Integer.parseInt(t25.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t26.getText())){
                    t26.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t26.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t26.getText())){
                    DiaPag1.setText(t26.getText());
                    DiaPag2.setText(t26.getText());
                    
                    DiaAltera = Integer.parseInt(t26.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t27.getText())){
                    t27.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t27.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t27.getText())){
                    DiaPag1.setText(t27.getText());
                    DiaPag2.setText(t27.getText());
                    
                    DiaAltera = Integer.parseInt(t27.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t28.getText())){
                    t28.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t28.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t28.getText())){
                    DiaPag1.setText(t28.getText());
                    DiaPag2.setText(t28.getText());
                    
                    DiaAltera = Integer.parseInt(t28.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t29.getText())){
                    t29.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t29.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t29.getText())){
                    DiaPag1.setText(t29.getText());
                    DiaPag2.setText(t29.getText());
                    
                    DiaAltera = Integer.parseInt(t29.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t30.getText())){
                    t30.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t30.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t30.getText())){
                    DiaPag1.setText(t30.getText());
                    DiaPag2.setText(t30.getText());
                    
                    DiaAltera = Integer.parseInt(t30.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t31.getText())){
                    t31.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t31.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t31.getText())){
                    DiaPag1.setText(t31.getText());
                    DiaPag2.setText(t31.getText());
                    
                    DiaAltera = Integer.parseInt(t31.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t32.getText())){
                    t32.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t32.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t32.getText())){
                    DiaPag1.setText(t32.getText());
                    DiaPag2.setText(t32.getText());
                    
                    DiaAltera = Integer.parseInt(t32.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t33.getText())){
                    t33.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t33.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t33.getText())){
                    DiaPag1.setText(t33.getText());
                    DiaPag2.setText(t33.getText());
                    
                    DiaAltera = Integer.parseInt(t33.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t34.getText())){
                    t34.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t34.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t34.getText())){
                    DiaPag1.setText(t34.getText());
                    DiaPag2.setText(t34.getText());
                    
                    DiaAltera = Integer.parseInt(t34.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t35.getText())){
                    t35.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t35.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t35.getText())){
                    DiaPag1.setText(t35.getText());
                    DiaPag2.setText(t35.getText());
                    
                    DiaAltera = Integer.parseInt(t35.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t36.getText())){
                    t36.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t36.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t36.getText())){
                    DiaPag1.setText(t36.getText());
                    DiaPag2.setText(t36.getText());
                    
                    DiaAltera = Integer.parseInt(t36.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t37.getText())){
                    t37.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t37.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t37.getText())){
                    DiaPag1.setText(t37.getText());
                    DiaPag2.setText(t37.getText());
                    
                    DiaAltera = Integer.parseInt(t37.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t38.getText())){
                    t38.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t38.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t38.getText())){
                    DiaPag1.setText(t38.getText());
                    DiaPag2.setText(t38.getText());
                    
                    DiaAltera = Integer.parseInt(t38.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t39.getText())){
                    t39.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t39.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t39.getText())){
                    DiaPag1.setText(t39.getText());
                    DiaPag2.setText(t39.getText());
                    
                    DiaAltera = Integer.parseInt(t39.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t40.getText())){
                    t40.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t40.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t40.getText())){
                    DiaPag1.setText(t40.getText());
                    DiaPag2.setText(t40.getText());
                    
                    DiaAltera = Integer.parseInt(t40.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t41.getText())){
                    t41.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t41.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t41.getText())){
                    DiaPag1.setText(t41.getText());
                    DiaPag2.setText(t41.getText());
                    
                    DiaAltera = Integer.parseInt(t41.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        t42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt){
                if(! "".equals(t42.getText())){
                    t42.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                t42.setBorder(null);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt){
                if(!"".equals(t42.getText())){
                    DiaPag1.setText(t42.getText());
                    DiaPag2.setText(t42.getText());
                    
                    DiaAltera = Integer.parseInt(t42.getText());
                    diaCliq = 0;
                    VerificaSemana();
                }
            }
});
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnoPag1;
    private javax.swing.JLabel AnoPag2;
    private javax.swing.JLabel DiaPag1;
    private javax.swing.JLabel DiaPag2;
    private javax.swing.JLabel MesPag1;
    private javax.swing.JLabel MesPag2;
    private javax.swing.JComboBox<String> SelecaoAno;
    private javax.swing.JComboBox<String> SelecaoMes;
    private javax.swing.JLabel SemDiaPag1;
    private javax.swing.JLabel SemDiaPag2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel t1;
    private javax.swing.JLabel t10;
    private javax.swing.JLabel t11;
    private javax.swing.JLabel t12;
    private javax.swing.JLabel t13;
    private javax.swing.JLabel t14;
    private javax.swing.JLabel t15;
    private javax.swing.JLabel t16;
    private javax.swing.JLabel t17;
    private javax.swing.JLabel t18;
    private javax.swing.JLabel t19;
    private javax.swing.JLabel t2;
    private javax.swing.JLabel t20;
    private javax.swing.JLabel t21;
    private javax.swing.JLabel t22;
    private javax.swing.JLabel t23;
    private javax.swing.JLabel t24;
    private javax.swing.JLabel t25;
    private javax.swing.JLabel t26;
    private javax.swing.JLabel t27;
    private javax.swing.JLabel t28;
    private javax.swing.JLabel t29;
    private javax.swing.JLabel t3;
    private javax.swing.JLabel t30;
    private javax.swing.JLabel t31;
    private javax.swing.JLabel t32;
    private javax.swing.JLabel t33;
    private javax.swing.JLabel t34;
    private javax.swing.JLabel t35;
    private javax.swing.JLabel t36;
    private javax.swing.JLabel t37;
    private javax.swing.JLabel t38;
    private javax.swing.JLabel t39;
    private javax.swing.JLabel t4;
    private javax.swing.JLabel t40;
    private javax.swing.JLabel t41;
    private javax.swing.JLabel t42;
    private javax.swing.JLabel t5;
    private javax.swing.JLabel t6;
    private javax.swing.JLabel t7;
    private javax.swing.JLabel t8;
    private javax.swing.JLabel t9;
    // End of variables declaration//GEN-END:variables
}
